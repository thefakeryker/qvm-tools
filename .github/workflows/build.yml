name: Build
on:
  workflow_dispatch:
jobs:
  linux:
    name: Linux
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Install Dependencies
        run: |
          sudo apt-get update
      - name: Compile
        run: |
          cmake -S . -B build -G Ninja
          cmake --build build
      - uses: actions/upload-artifact@v4
        with:
          name: linux-build
          path: build
          if-no-files-found: error
          retention-days: 5

  windows-mingw:
    name: Windows MinGW
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v4
      - name: Compile
        run: |
          cmake -S . -B build -G Ninja
          cmake --build build
      - uses: actions/upload-artifact@v4
        with:
          name: windows-mingw-build
          path: build
          if-no-files-found: error
          retention-days: 5

  macos:
    name: macOS
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v4
      - name: Compile
        run: |
          cmake -S . -B build -G Ninja
          cmake --build build
      - uses: actions/upload-artifact@v4
        with:
          name: macos-build
          path: build
          if-no-files-found: error
          retention-days: 5

  create-release:
    needs: [linux, windows-mingw, macos]
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: .
      - name: Zip Linux Build
        run: |
          cd linux-build
          zip -r qvm-tools-linux-x86_64.zip lburg q3asm q3cpp q3lcc q3rcc stringify
      - name: Zip Windows Build
        run: |
          cd windows-mingw-build
          zip -r qvm-tools-windows-mingw-x86_64.zip lburg.exe q3asm.exe q3cpp.exe q3lcc.exe q3rcc.exe stringify.exe
      - name: Zip macOS Build
        run: |
          cd macos-build
          zip -r qvm-tools-macos-x86_64.zip lburg q3asm q3cpp q3lcc q3rcc stringify

      - name: Create latest build
        uses: czietz/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          automatic_release_tag: "latest"
          prerelease: false
          title: Latest Build
          files: *.zip

      update-release:
        if: ${{ github.event_name == 'release' }}
        needs: [linux, windows-mingw, macos]
        runs-on: ubuntu-latest

        strategy:
          matrix:
            include:
              - artifact_dir: linux-build
                artifact_name: qvm-tools-linux-x86_64.zip

              - artifact_dir: windows-mingw-build
                artifact_name: qvm-tools-windows-mingw-x86_64.zip

              - artifact_dir: macos-build
                artifact_name: qvm-tools-macos-x86_64.zip

      steps:
        - name: Download Artifacts
          uses: actions/download-artifact@v4

        - name: Create archive
          if: ${{ matrix.artifact_dir != 'windows-mingw-build' }}
          run: 7z a -r ${{ matrix.artifact_name }} ./${{ matrix.artifact_dir }}/lburg ./${{ matrix.artifact_dir }}/q3asm ./${{ matrix.artifact_dir }}/q3cpp ./${{ matrix.artifact_dir }}/q3lcc ./${{ matrix.artifact_dir }}/q3rcc ./${{ matrix.artifact_dir }}/stringify

        - name: Create archive windows
          if: ${{ matrix.artifact_dir == 'windows-mingw-build' }}
          run: 7z a -r ${{ matrix.artifact_name }} ./${{ matrix.artifact_dir }}/lburg.exe ./${{ matrix.artifact_dir }}/q3asm.exe ./${{ matrix.artifact_dir }}/q3cpp.exe ./${{ matrix.artifact_dir }}/q3lcc.exe ./${{ matrix.artifact_dir }}/q3rcc.exe ./${{ matrix.artifact_dir }}/stringify.exe

        - name: Upload archive
          uses: "svenstaro/upload-release-action@latest"
          with:
            repo_token: ${{ secrets.GITHUB_TOKEN }}
            tag: ${{ github.ref }}
            overwrite: true
            file: ${{ matrix.artifact_name }}
